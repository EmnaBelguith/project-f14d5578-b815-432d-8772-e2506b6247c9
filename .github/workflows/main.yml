name: CI/CD Pipeline Java

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Maven cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/myrepo:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/myrepo:latest

  deploy-and-health-check:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Pull Docker image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/myrepo:latest

      - name: Run Docker container
        run: |
          docker run -d --name my-app -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/myrepo:latest
          sleep 30 # Waiting for the JVM to start

      - name: Health Check
        run: curl --retry 5 --retry-delay 5 http://localhost:8080/ || exit 1

      - name: Clean up Docker container
        if: always()
        run: |
          docker stop my-app || true
          docker rm my-app || true
